{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOURAV\\\\Desktop\\\\bodypostureApp\\\\posture-detection-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const [feedback, setFeedback] = useState('');\n  const startCamera = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n  };\n  const captureAndAnalyze = async () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = videoRef.current.videoWidth;\n    canvas.height = videoRef.current.videoHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\n    const formData = new FormData();\n    formData.append('frame', blob, 'frame.jpg');\n    try {\n      const res = await fetch('http://localhost:5000/posture', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setFeedback(data.feedback);\n    } catch (err) {\n      setFeedback('Error connecting to server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posture Detection App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      className: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureAndAnalyze,\n        children: \"Capture & Analyze Posture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Feedback:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this), \" \", feedback]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rgHIKC6e7epld/bE+LWBE5pDB1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","feedback","setFeedback","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","captureAndAnalyze","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","blob","Promise","resolve","toBlob","formData","FormData","append","res","fetch","method","body","data","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SOURAV/Desktop/bodypostureApp/posture-detection-app/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const videoRef = useRef(null);\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  const startCamera = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    videoRef.current.srcObject = stream;\r\n  };\r\n\r\n  const captureAndAnalyze = async () => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = videoRef.current.videoWidth;\r\n    canvas.height = videoRef.current.videoHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n\r\n    const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\r\n    const formData = new FormData();\r\n    formData.append('frame', blob, 'frame.jpg');\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/posture', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      setFeedback(data.feedback);\r\n    } catch (err) {\r\n      setFeedback('Error connecting to server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Posture Detection App</h1>\r\n      <video ref={videoRef} autoPlay className=\"video\" />\r\n      <div>\r\n        <button onClick={startCamera}>Start Camera</button>\r\n        <button onClick={captureAndAnalyze}>Capture & Analyze Posture</button>\r\n      </div>\r\n      <div className=\"feedback\"><strong>Feedback:</strong> {feedback}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}